<%- include('../../partials/header') %>
<div class="container mt-5">
  <div class="d-flex align-items-center mb-4">
    <i class="fa fa-user-circle fa-2x mr-2" style="color:#007bff;"></i>
    <h2 class="mb-0">User Management</h2>
  </div>
  <div id="userCrudApp">
    <!-- User CRUD table and controls will be rendered here by client-side JS or EJS -->
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Username</th>
          <th>Role</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach(function(user) { %>
          <tr>
            <td><%= user.username %></td>
            <td><%= user.role %></td>
            <td>
              <button class="btn btn-sm btn-primary" onclick="editUser('<%= user._id %>')">Edit</button>
              <button class="btn btn-sm btn-danger" onclick="deleteUser('<%= user._id %>')">Delete</button>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
    <!-- <button class="btn btn-success" onclick="showAddUserModal()">Add User</button> -->
    <!-- Add User Modal -->
    <!-- <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addUserModalLabel">Add User</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form id="addUserForm">
            <div class="modal-body">
              <div class="mb-3">
                <label for="addUsername" class="form-label">Username</label>
                <input type="text" class="form-control" id="addUsername" name="username" required>
              </div>
              <div class="mb-3">
                <label for="addEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="addEmail" name="email" required>
              </div>
              <div class="mb-3">
                <label for="addPassword" class="form-label">Password</label>
                <input type="password" class="form-control" id="addPassword" name="password" required>
              </div>
              <div class="mb-3">
                <label for="addRole" class="form-label">Role</label>
                <select class="form-select" id="addRole" name="role" required>
                  <option value="reader">Reader</option>
                  <option value="writer">Writer</option>
                  <option value="admin">Admin</option>
                </select>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-primary">Add User</button>
            </div>
          </form>
        </div>
      </div>
    </div> -->
    <!-- Edit User Modal -->
    <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form id="editUserForm">
            <div class="modal-body">
              <input type="hidden" id="editUserId" name="id">
              <div class="mb-3">
                <label for="editUsername" class="form-label">Username</label>
                <input type="text" class="form-control" id="editUsername" name="username" required>
              </div>
              <div class="mb-3">
                <label for="editEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="editEmail" name="email" required>
              </div>
              <div class="mb-3">
                <label for="editRole" class="form-label">Role</label>
                <select class="form-select" id="editRole" name="role" required>
                  <option value="reader">Reader</option>
                  <option value="writer">Writer</option>
                  <option value="admin">Admin</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="editPassword" class="form-label">New Password (leave blank to keep current)</label>
                <input type="password" class="form-control" id="editPassword" name="password">
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-primary">Save Changes</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
<%- include('../../partials/footer') %>
<!-- Font Awesome CDN for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
<!-- Bootstrap JS (for modals) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
// Show Add User Modal
function showAddUserModal() {
  var modal = new bootstrap.Modal(document.getElementById('addUserModal'));
  modal.show();
}
// Show Edit User Modal and fill form
function editUser(id) {
  fetch('/users/' + id)
    .then(res => res.json())
    .then(user => {
      document.getElementById('editUserId').value = user._id;
      document.getElementById('editUsername').value = user.username;
      document.getElementById('editEmail').value = user.email || '';
      document.getElementById('editRole').value = user.role;
      document.getElementById('editPassword').value = '';
      var modal = new bootstrap.Modal(document.getElementById('editUserModal'));
      modal.show();
    });
}
// Handle Add User form submit (AJAX)
document.addEventListener('DOMContentLoaded', function() {
  var addForm = document.getElementById('addUserForm');
  if(addForm) {
    addForm.addEventListener('submit', function(e) {
      e.preventDefault();
      fetch('/users', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          username: addForm.username.value,
          email: addForm.email.value,
          password: addForm.password.value,
          role: addForm.role.value
        })
      })
      .then(res => res.json())
      .then(data => {
        if(data.user) {
          alert('User added successfully!');
          addForm.reset();
          bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
          location.reload();
        } else {
          alert('Error: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(() => alert('Error adding user.'));
    });
  }
  // Handle Edit User form submit (AJAX)
  var editForm = document.getElementById('editUserForm');
  if(editForm) {
    editForm.addEventListener('submit', function(e) {
      e.preventDefault();
      var id = editForm.id.value;
      var body = {
        username: editForm.username.value,
        email: editForm.email.value,
        role: editForm.role.value
      };
      if(editForm.password.value) body.password = editForm.password.value;
      fetch('/users/' + id, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(body)
      })
      .then(res => res.json())
      .then(data => {
        if(data.user) {
          alert('User updated successfully!');
          bootstrap.Modal.getInstance(document.getElementById('editUserModal')).hide();
          location.reload();
        } else {
          alert('Error: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(() => alert('Error updating user.'));
    });
  }
});
// Delete user
function deleteUser(id) {
  if(confirm('Are you sure you want to delete this user?')) {
    fetch('/users/' + id, { method: 'DELETE' })
      .then(res => res.json())
      .then(data => {
        if(data.message) {
          alert('User deleted successfully!');
          location.reload();
        } else {
          alert('Error: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(() => alert('Error deleting user.'));
  }
}
</script>
